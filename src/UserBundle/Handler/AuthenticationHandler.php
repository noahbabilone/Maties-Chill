<?php/** * Created by PhpStorm. * User: yann * Date: 20/08/2016 * Time: 13:14 */namespace UserBundle\Handler;use Symfony\Component\HttpFoundation\Request;use Symfony\Component\HttpFoundation\Response;use Symfony\Component\Security\Core\Authentication\Token\TokenInterface;use Symfony\Component\Security\Core\Exception\AuthenticationException;use Symfony\Component\Security\Http\Authentication\AuthenticationFailureHandlerInterface;use Symfony\Component\Security\Http\Authentication\AuthenticationSuccessHandlerInterface;class AuthenticationHandler implements AuthenticationSuccessHandlerInterface, AuthenticationFailureHandlerInterface{    protected $router;    protected $security;    protected $userManager;    protected $service_container;    public function __construct(RouterInterface $router, SecurityContext $security, $userManager, $service_container)    {        $this->router = $router;        $this->security = $security;        $this->userManager = $userManager;        $this->service_container = $service_container;    }    /**     * This is called when an interactive authentication attempt succeeds. This     * is called by authentication listeners inheriting from     * AbstractAuthenticationListener.     *     * @param Request $request     * @param TokenInterface $token     *     * @return Response never null     */    public function onAuthenticationSuccess(Request $request, TokenInterface $token)    {        if ($request->isXmlHttpRequest()) {            $result = array('success' => true);            $response = new Response(json_encode($result));            $response->headers->set('Content-Type', 'application/json');            return $response;        } else {            // Create a flash message with the authentication error message            $request->getSession()->getFlashBag()->set('error', "Error - login ");            $url = $this->router->generate('fos_user_security_login');            return new RedirectResponse($url);        }        return new RedirectResponse($this->router->generate('anag_new'));    }    /**     * This is called when an interactive authentication attempt fails. This is     * called by authentication listeners inheriting from     * AbstractAuthenticationListener.     *     * @param Request $request     * @param AuthenticationException $exception     *     * @return Response The response to return, never null     */    public function onAuthenticationFailure(Request $request, AuthenticationException $exception)    {        $result = array(            'success' => false,            'function' => 'onAuthenticationFailure',            'error' => true,            'message' => $this->translator->trans($exception->getMessage(), array(), 'FOSUserBundle')        );        $response = new Response(json_encode($result));        $response->headers->set('Content-Type', 'application/json');        return $response;    }}