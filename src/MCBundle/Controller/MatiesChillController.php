<?phpnamespace MCBundle\Controller;use MCBundle\Entity\Film;use MCBundle\Entity\SearchFilm;use MCBundle\Entity\Session;use Symfony\Bundle\FrameworkBundle\Controller\Controller;use Symfony\Component\HttpFoundation\Response;use Symfony\Component\HttpFoundation\Request;use MCBundle\Form\SearchFilmType;//use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;class MatiesChillController extends Controller{    /**     * @return Response     */    public function indexAction()    {        return $this->render('MCBundle:Pages:index.html.twig');    }   //    public function searchAllocineFilmAction($keyword, Request $request)//    {//        $allocine = $this->get("mc_allocine");//        $result = $allocine->search($keyword);//        $limitPage = 10;//        $numberPage = 1;//        $result = json_decode($result);//        $movies = $this->get('knp_paginator')->paginate(//            $result,//            $request->query->get('page', $numberPage),//            $limitPage//        );////        return $this->render(//            'MCBundle:Pages:filmsSearch.html.twig',//            array(//                "motsCles" => $keyword,//                "movies" => $movies//            )//        );//    }    /**     * @param Request $request     * @return Response     */    public function searchFilmAction(Request $request)    {        $keyword = "";        $data = array();        $search = new SearchFilm;        $formSearch = $this->createForm(new SearchFilmType(), $search);        if ($formSearch->handleRequest($request)->isValid() && !empty($search->getTitle())) {            $keyword = $search->getTitle();            $allohelper = $this->get("mc_allo_helper");            $page = 1;            try {                $result = $allohelper->search($keyword, $page);                $data = $result["movie"];            }// En cas d'erreur.            catch (\ErrorException $e) {                // Affichage des informations sur la requÃªte                $error = "<pre>" . print_r($allohelper->getRequestInfos(), 1) . " </pre><br>";                // Afficher un message d'erreur.                $error .= "Erreur " . $e->getCode() . ": " . $e->getMessage();                return new Response($error);            }        }        return $this->render(            'MCBundle:Pages:filmsSearch.html.twig',            array(                "motsCles" => $keyword,                "movie" => $data            )        );    }    public function searchFieldAction(Request $request)    {        $search = new SearchFilm();        $formSearch = $this->createForm(new SearchFilmType(), $search,            array(                'action' => $this->generateUrl('mc_search_field'),                'method' => 'GET'            ));        if ($formSearch->handleRequest($request)->isValid() && !empty($search->getTitle())) {            return $this->redirect($this->generateUrl('mc_film_search_allocine', array("keyword" => $search->getTitle())));        }        return $this->render('MCBundle:Includes:search.html.twig', array(            'formSearch' => $formSearch->createView(),        ));    }       }