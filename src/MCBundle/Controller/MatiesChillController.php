<?phpnamespace MCBundle\Controller;use MCBundle\Entity\SearchFilm;use Symfony\Bundle\FrameworkBundle\Controller\Controller;use Symfony\Component\HttpFoundation\Response;use Symfony\Component\HttpFoundation\Request;use MCBundle\Form\SearchFilmType;//use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;class MatiesChillController extends Controller{    public function indexAction()    {        return $this->render('MCBundle:Pages:index.html.twig');    }    public function sessionAction()    {        return $this->render('MCBundle:Pages:sessions.html.twig');    }    public function filmAction()    {        $em = $this->getDoctrine()->getManager();        $films = $em->getRepository('MCBundle:Film')->findAll();        return $this->render(            'MCBundle:Pages:films.html.twig',            array(                "films" => $films            )        );    }    public function filmsAction($film)    {        return new Response($film);    }    /**     * @param Request $request     * @return Response     */    public function searchFilmAction(Request $request)    {        $keyword = "";        $data = array();        $search = new SearchFilm;        $formSearch = $this->createForm(new SearchFilmType(), $search);        var_dump($search->getTitle());        if ($formSearch->handleRequest($request)->isValid() && !empty($search->getTitle())) {//            $em = $this->getDoctrine()->getManager();            $keyword = $search->getTitle();//            var_dump($keyword);            $allohelper = $this->get("mc_allo_helper");            $page = 1;            try {                $result = $allohelper->search($keyword, $page);                $data = $result["movie"];            }// En cas d'erreur.            catch (\ErrorException $e) {                // Affichage des informations sur la requÃªte                $error = "<pre>" . print_r($allohelper->getRequestInfos(), 1) . " </pre><br>";                // Afficher un message d'erreur.                $error .= "Erreur " . $e->getCode() . ": " . $e->getMessage();                return new Response($error);            }        }        return $this->render(            'MCBundle:Pages:filmsSearch.html.twig',            array(                "motsCles" => $keyword,                "movie" => $data            )        );    }    public function searchFieldAction()    {        $search = new SearchFilm();        $formSearch = $this->createForm(new SearchFilmType(), $search,            array(//                'action' => $this->generateUrl('mc_search_film'),////                'method' => 'GET'            ));        return $this->render('MCBundle:Includes:search.html.twig', array(            'formSearch' => $formSearch->createView(),        ));    }}