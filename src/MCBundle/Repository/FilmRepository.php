<?php

namespace MCBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * FilmRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FilmRepository extends EntityRepository
{
    public function getByGenre($genre)
    {
        $query = $this->createQueryBuilder('a');
        $query
            ->innerJoin('a.genre', 'g')
            ->addSelect('g') 
            ->where('g.id = :genre')
            ->setParameter('genre', $genre);
        $query->orderBy('a.id', 'DESC');
        return $query
            ->getQuery()
            ->getResult();

    }

    public function getLastFilm()
    {
        $query = $this->createQueryBuilder('a');
        $query->orderBy('a.id', 'DESC');
        return $query
            ->getQuery()
            ->getResult();

    } 
    public function lastFilm($limit = null)
    {
        $query = $this->createQueryBuilder('a');
        $query->orderBy('a.id', 'DESC');
        if($limit !== null){
           $query->setMaxResults($limit);
        }
        return $query
            ->getQuery()
            ->getResult();

    }   
    
    public function newFilm($limit = null)
    {
        $query = $this->createQueryBuilder('a');
        $query->orderBy('a.releaseDate', 'DESC');
        if($limit !== null){
           $query->setMaxResults($limit);
        }
        return $query
            ->getQuery()
            ->getResult();

    }
    public function topFilm($limit = null)
    {
        $query = $this->createQueryBuilder('a');
        $query->orderBy('a.userRating', 'DESC');
        if($limit !== null){
           $query->setMaxResults($limit);
        }
        return $query
            ->getQuery()
            ->getResult();

    }

    public function search(Film $film)
    {
        $query = $this->createQueryBuilder('a');
        $query
            ->where('a.title LIKE :title')
            ->setParameter('title', '%' . $film->getTitle() . '%')
            ->orderBy('a.id', 'DESC');

        return $query
            ->getQuery()
            ->getResult();
        //return $this->find($query);
    } 
    public function searchDB($keyword)
    {
        $query = $this->createQueryBuilder('a');
        $query
            ->where('a.title LIKE :title')
            ->setParameter('title', '%' . $keyword. '%')
            ->orderBy('a.id', 'DESC');

        return $query
            ->getQuery()
            ->getResult();
        //return $this->find($query);
    }
}
